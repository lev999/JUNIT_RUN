<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="test.java.org.gradle.example.simple.TestPerson" tests="1" skipped="0" failures="1" errors="0" timestamp="2015-05-06T07:58:11" hostname="physdep213-3" time="1.002">
  <properties/>
  <testcase name="testPerson" classname="test.java.org.gradle.example.simple.TestPerson" time="1.002">
    <failure message="java.lang.Exception: test timed out after 1000 milliseconds" type="java.lang.Exception">java.lang.Exception: test timed out after 1000 milliseconds
	at main.java.org.gradle.example.simple.Person.wasteTime(Person.java:46)
	at test.java.org.gradle.example.simple.TestPerson.testPerson(TestPerson.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
